1-1. 请描述Thread类中的start()方法与run()方法的区别。

1. 定义Thread类的子类，并重写该类的run()方法，该run()方法的方法体就代表了线程需要完成的任
务,因此把run()方法称为线程执行体。
2. 创建Thread子类的实例，即创建了线程对象
3. 调用线程对象的start()方法来启动该线程，不是调用run()方法，切记！！！
定义Runnable接口的实现类，并重写该接口的run()方法，该run()方法的方法体同样是该线程的线
程执行体。
run()方法是多线程程序的一个执行目标。所有的多线程代码都在run方法里面。
所有的多线程代码都是通过运行Thread的start()方法来运行的。

2-1. 请描述以下方式创建线程的步骤。 

继承Thread类方式 
创建Thread类的子类并继承它，并重写该类的run()方法
实现Runnable接口方式
1. 定义Runnable接口的实现类，并重写该接口的run()方法，该run()方法的方法体同样是该线程的线
程执行体。
2. 创建Runnable实现类的实例，并以此实例作为Thread的target来创建Thread对象，该Thread对
象才是真正的线程对象。
3. 调用线程对象的start()方法来启动线程。

1. 请描述在线程的生命周期中， 有几种状态呢 ?

1、NEW(新建)
2、Runnable(可运行)
3、Blocked(锁阻塞)
4、Waiting(无限等待)
5、Timed Waiting(计时等待)
6、Teminated(被终止)

